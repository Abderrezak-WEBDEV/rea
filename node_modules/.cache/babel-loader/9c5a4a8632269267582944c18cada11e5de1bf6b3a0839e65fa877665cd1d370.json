{"ast":null,"code":"var _jsxFileName = \"/Users/bouiche/Desktop/menuresto/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport Category from './components/Category';\nimport Cards from './components/Cards';\nimport { items } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [itemsData, setItemData] = useState(items);\n\n  // 1-filtrer avec les categories\n  const filterCategory = cat => {\n    if (cat === 'Menu') {\n      //affiche le menu entier\n      setItemData(items);\n    } else {\n      // affiche en fonction des catégories(dejeune , petit dejeune, dîner)\n      const newArry = items.filter(item => item.category === cat);\n      setItemData(newArry);\n    }\n  };\n\n  //2- je veux recueprer dans mon tableau juste cle/valeur category\n  // pour éviter la répitition sur la valeur de la clé category , je vais utilié le spreadOprateur pour les mettre dans un tableau et \"new Set\"\n\n  const newArry1 = [\"Menu\", ...new Set(items.map(i => i.category))];\n  console.log(newArry1);\n\n  //3- fonction de recherche la le foom de Navbar\n  const filterWordSearch = word => {\n    //si l'utilisateur n'a pas mit de mot dans l'input\n    if (word !== '') {\n      const newArry = items.filter(item => item.title === word);\n      setItemData(newArry);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Category, {\n        filter: filterCategory,\n        allCat: newArry1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        donnees: itemsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fhFgmymTPW40G1v/GDawsLKmkz8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Navbar","Header","Category","Cards","items","jsxDEV","_jsxDEV","App","_s","itemsData","setItemData","filterCategory","cat","newArry","filter","item","category","newArry1","Set","map","i","console","log","filterWordSearch","word","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","allCat","donnees","_c","$RefreshReg$"],"sources":["/Users/bouiche/Desktop/menuresto/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {Container} from 'react-bootstrap'\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport Category from './components/Category';\nimport Cards from './components/Cards';\nimport {items} from './data';\n\nconst App = ()=> {\n  const [itemsData, setItemData] = useState(items);\n  \n  // 1-filtrer avec les categories\n  const filterCategory= (cat) => {\n    if(cat=== 'Menu') \n    {\n      //affiche le menu entier\n      setItemData(items)\n    }else{\n      // affiche en fonction des catégories(dejeune , petit dejeune, dîner)\n      const newArry = items.filter((item)=>item.category === cat)\n      setItemData(newArry)\n    }\n  }\n\n  //2- je veux recueprer dans mon tableau juste cle/valeur category\n  // pour éviter la répitition sur la valeur de la clé category , je vais utilié le spreadOprateur pour les mettre dans un tableau et \"new Set\"\n\n  const newArry1 = [\"Menu\",...new Set(items.map((i)=> i.category))]\n   console.log(newArry1)\n\n  //3- fonction de recherche la le foom de Navbar\n  const filterWordSearch = (word) => {\n    //si l'utilisateur n'a pas mit de mot dans l'input\n    if(word !== '')  \n    {\n      const newArry = items.filter((item)=>item.title === word)\n      setItemData(newArry)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Container>\n        <Header/>\n        <Category filter= {filterCategory}  allCat={newArry1}/>\n        <Cards donnees = {itemsData}/>\n     </Container>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,SAAQC,SAAS,QAAO,iBAAiB;AACzC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAAQC,KAAK,QAAO,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACM,KAAK,CAAC;;EAEhD;EACA,MAAMO,cAAc,GAAGC,GAAG,IAAK;IAC7B,IAAGA,GAAG,KAAI,MAAM,EAChB;MACE;MACAF,WAAW,CAACN,KAAK,CAAC;IACpB,CAAC,MAAI;MACH;MACA,MAAMS,OAAO,GAAGT,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACC,QAAQ,KAAKJ,GAAG,CAAC;MAC3DF,WAAW,CAACG,OAAO,CAAC;IACtB;EACF,CAAC;;EAED;EACA;;EAEA,MAAMI,QAAQ,GAAG,CAAC,MAAM,EAAC,GAAG,IAAIC,GAAG,CAACd,KAAK,CAACe,GAAG,CAAEC,CAAC,IAAIA,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAC;EAChEK,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;;EAEtB;EACA,MAAMM,gBAAgB,GAAIC,IAAI,IAAK;IACjC;IACA,IAAGA,IAAI,KAAK,EAAE,EACd;MACE,MAAMX,OAAO,GAAGT,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACU,KAAK,KAAKD,IAAI,CAAC;MACzDd,WAAW,CAACG,OAAO,CAAC;IACtB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA,CAACN,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTzB,OAAA,CAACP,SAAS;MAAA4B,QAAA,gBACRrB,OAAA,CAACL,MAAM;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACTzB,OAAA,CAACJ,QAAQ;QAACY,MAAM,EAAGH,cAAe;QAAEqB,MAAM,EAAEf;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvDzB,OAAA,CAACH,KAAK;QAAC8B,OAAO,EAAIxB;MAAU;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAAvB,EAAA,CA1CKD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
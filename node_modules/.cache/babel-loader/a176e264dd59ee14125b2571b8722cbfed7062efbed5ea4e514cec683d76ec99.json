{"ast":null,"code":"var _jsxFileName = \"/Users/bouiche/Desktop/menuresto/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport Category from './components/Category';\nimport Cards from './components/Cards';\nimport { items } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [itemsData, setItemData] = useState(items);\n  // je veux recueprer dans mon tableau juste cle/valeur category\n  const newArr = items.map(i => i.category);\n  console.log(newArr);\n  // filtrer avec les categories\n  const filterCategory = cat => {\n    if (cat === 'menu') {\n      //affiche le menu entier\n      setItemData(items);\n    } else {\n      // affiche en fonction des catégories(dejeune , petit dejeune, dîner)\n      const newArry = items.filter(item => item.category === cat);\n      setItemData(newArry);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Category, {\n        filter: filterCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        donnees: itemsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fhFgmymTPW40G1v/GDawsLKmkz8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Navbar","Header","Category","Cards","items","jsxDEV","_jsxDEV","App","_s","itemsData","setItemData","newArr","map","i","category","console","log","filterCategory","cat","newArry","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","donnees","_c","$RefreshReg$"],"sources":["/Users/bouiche/Desktop/menuresto/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport {Container} from 'react-bootstrap'\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport Category from './components/Category';\nimport Cards from './components/Cards';\nimport {items} from './data';\n\nconst App = ()=> {\n  const [itemsData, setItemData]=useState(items);\n  // je veux recueprer dans mon tableau juste cle/valeur category\n  const newArr= items.map((i)=> i.category)\n   console.log(newArr)\n  // filtrer avec les categories\n  const filterCategory= (cat) => {\n    if(cat=== 'menu') \n    {\n      //affiche le menu entier\n      setItemData(items)\n    }else{\n      // affiche en fonction des catégories(dejeune , petit dejeune, dîner)\n      const newArry = items.filter((item)=>item.category === cat)\n      setItemData(newArry)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Navbar/>\n     <Container>\n      <Header/>\n      <Category filter= {filterCategory} />\n      <Cards donnees = {itemsData}/>\n     </Container>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,SAAQC,SAAS,QAAO,iBAAiB;AACzC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAAQC,KAAK,QAAO,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAACZ,QAAQ,CAACM,KAAK,CAAC;EAC9C;EACA,MAAMO,MAAM,GAAEP,KAAK,CAACQ,GAAG,CAAEC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC;EACxCC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EACpB;EACA,MAAMM,cAAc,GAAGC,GAAG,IAAK;IAC7B,IAAGA,GAAG,KAAI,MAAM,EAChB;MACE;MACAR,WAAW,CAACN,KAAK,CAAC;IACpB,CAAC,MAAI;MACH;MACA,MAAMe,OAAO,GAAGf,KAAK,CAACgB,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACP,QAAQ,KAAKI,GAAG,CAAC;MAC3DR,WAAW,CAACS,OAAO,CAAC;IACtB;EACF,CAAC;EACD,oBACEb,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA,CAACN,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACVrB,OAAA,CAACP,SAAS;MAAAwB,QAAA,gBACTjB,OAAA,CAACL,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACTrB,OAAA,CAACJ,QAAQ;QAACkB,MAAM,EAAGH;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCrB,OAAA,CAACH,KAAK;QAACyB,OAAO,EAAInB;MAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAAnB,EAAA,CA3BKD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}